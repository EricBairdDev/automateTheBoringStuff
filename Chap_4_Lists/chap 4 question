Practice Questions
Q: 1. What is []?
empty list value


Q: 2. How would you assign the value 'hello' as the third value in a list stored in a
variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)
spam[2] = 'hello'


For the following three questions, let’s say spam contains the list ['a', 'b', 'c',
'd'].



Q: 3. What does spam[int('3' * 2) / 11] evaluate to?
'd'  (Note that '3' * 2 is the string '33', which is passed to int() before being divided by 11.
This eventually evaluates to 3. Expressions can be used wherever values are used.)




Q: 4. What does spam[-1] evaluate to?
'd'


Q: 5. What does spam[:2] evaluate to?
['a', 'b']


For the following three questions, let’s say bacon contains the list [3.14, 'cat',
11, 'cat', True].



Q: 6. What does bacon.index('cat') evaluate to?
2


Q: 7. What does bacon.append(99) make the list value in bacon look like?
[3.14, 'cat', 11, 'cat', True, 99]


Q: 8. What does bacon.remove('cat') make the list value in bacon look like?
[3.14, 11, 'cat', True]


Q: 9. What are the operators for list concatenation and list replication?
The operator for list concatenation is +, while the operator for replication is *. (This is the same as for strings.


Q: 10. What is the difference between the append() and insert() list methods?
append adds to the end of a list, insert can add anywhere in a list


Q: 11. What are two ways to remove values from a list?
del and remove()



Q: 12. Name a few ways that list values are similar to string values.
Both lists and strings can be passed to len(), have indexes and slices, be used in for loops, be concatenated
or replicated, and be used with the in and not in operators.


Q: 13. What is the difference between lists and tuples?
lists can be changed (mutable), tuples cannot (immutable)


Q: 14. How do you type the tuple value that has just the integer value 42 in it?
spam = (42,) (The trailing comma is mandatory.)


Q: 15. How can you get the tuple form of a list value? How can you get the list
form of a tuple value?
tuple([list])
list((tuple))



Q: 16. Variables that “contain” list values don’t actually contain lists directly. What
do they contain instead?
 references to list values



Q: 17. What is the difference between copy.copy() and copy.deepcopy()?
The copy.copy() function will do a shallow copy of a list, while the copy.deepcopy() function will do a deep copy
of a list. That is, only copy.deepcopy() will duplicate any lists inside the list.